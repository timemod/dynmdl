? normal countries
? $expa(CO; nl, uk, be, ge, fr, es, dk, us, it, ch, se, no, fi, ir, in, jp, ru, pt, po, au) 
 
param c0_nl 100 c1_nl 0.28 c2_nl 0.32 c3_nl 0.10 c4_nl -20 c5_nl 1;
param c0_uk 100 c1_uk 0.28 c2_uk 0.32 c3_uk 0.10 c4_uk -20 c5_uk 1;
param c0_be 100 c1_be 0.28 c2_be 0.32 c3_be 0.10 c4_be -20 c5_be 1;
param c0_ge 100 c1_ge 0.28 c2_ge 0.32 c3_ge 0.10 c4_ge -20 c5_ge 1;
param c0_fr 100 c1_fr 0.28 c2_fr 0.32 c3_fr 0.10 c4_fr -20 c5_fr 1;
param c0_es 100 c1_es 0.28 c2_es 0.32 c3_es 0.10 c4_es -20 c5_es 1;
param c0_dk 100 c1_dk 0.28 c2_dk 0.32 c3_dk 0.10 c4_dk -20 c5_dk 1;
param c0_us 100 c1_us 0.28 c2_us 0.32 c3_us 0.10 c4_us -20 c5_us 1;
param c0_it 100 c1_it 0.28 c2_it 0.32 c3_it 0.10 c4_it -20 c5_it 1;
param c0_ch 100 c1_ch 0.28 c2_ch 0.32 c3_ch 0.10 c4_ch -20 c5_ch 1;
param c0_se 100 c1_se 0.28 c2_se 0.32 c3_se 0.10 c4_se -20 c5_se 1;
param c0_no 100 c1_no 0.28 c2_no 0.32 c3_no 0.10 c4_no -20 c5_no 1;
param c0_fi 100 c1_fi 0.28 c2_fi 0.32 c3_fi 0.10 c4_fi -20 c5_fi 1;
param c0_ir 100 c1_ir 0.28 c2_ir 0.32 c3_ir 0.10 c4_ir -20 c5_ir 1;
param c0_in 100 c1_in 0.28 c2_in 0.32 c3_in 0.10 c4_in -20 c5_in 1;
param c0_jp 100 c1_jp 0.28 c2_jp 0.32 c3_jp 0.10 c4_jp -20 c5_jp 1;
param c0_ru 100 c1_ru 0.28 c2_ru 0.32 c3_ru 0.10 c4_ru -20 c5_ru 1;
param c0_pt 100 c1_pt 0.28 c2_pt 0.32 c3_pt 0.10 c4_pt -20 c5_pt 1;
param c0_po 100 c1_po 0.28 c2_po 0.32 c3_po 0.10 c4_po -20 c5_po 1;
param c0_au 100 c1_au 0.28 c2_au 0.32 c3_au 0.10 c4_au -20 c5_au 1;
param i0_nl 100 i1_nl 0.12 i2_nl 0.08 i3_nl 0.04 i4_nl  40 i5_nl -1.5;
param i0_uk 100 i1_uk 0.12 i2_uk 0.08 i3_uk 0.04 i4_uk  40 i5_uk -1.5;
param i0_be 100 i1_be 0.12 i2_be 0.08 i3_be 0.04 i4_be  40 i5_be -1.5;
param i0_ge 100 i1_ge 0.12 i2_ge 0.08 i3_ge 0.04 i4_ge  40 i5_ge -1.5;
param i0_fr 100 i1_fr 0.12 i2_fr 0.08 i3_fr 0.04 i4_fr  40 i5_fr -1.5;
param i0_es 100 i1_es 0.12 i2_es 0.08 i3_es 0.04 i4_es  40 i5_es -1.5;
param i0_dk 100 i1_dk 0.12 i2_dk 0.08 i3_dk 0.04 i4_dk  40 i5_dk -1.5;
param i0_us 100 i1_us 0.12 i2_us 0.08 i3_us 0.04 i4_us  40 i5_us -1.5;
param i0_it 100 i1_it 0.12 i2_it 0.08 i3_it 0.04 i4_it  40 i5_it -1.5;
param i0_ch 100 i1_ch 0.12 i2_ch 0.08 i3_ch 0.04 i4_ch  40 i5_ch -1.5;
param i0_se 100 i1_se 0.12 i2_se 0.08 i3_se 0.04 i4_se  40 i5_se -1.5;
param i0_no 100 i1_no 0.12 i2_no 0.08 i3_no 0.04 i4_no  40 i5_no -1.5;
param i0_fi 100 i1_fi 0.12 i2_fi 0.08 i3_fi 0.04 i4_fi  40 i5_fi -1.5;
param i0_ir 100 i1_ir 0.12 i2_ir 0.08 i3_ir 0.04 i4_ir  40 i5_ir -1.5;
param i0_in 100 i1_in 0.12 i2_in 0.08 i3_in 0.04 i4_in  40 i5_in -1.5;
param i0_jp 100 i1_jp 0.12 i2_jp 0.08 i3_jp 0.04 i4_jp  40 i5_jp -1.5;
param i0_ru 100 i1_ru 0.12 i2_ru 0.08 i3_ru 0.04 i4_ru  40 i5_ru -1.5;
param i0_pt 100 i1_pt 0.12 i2_pt 0.08 i3_pt 0.04 i4_pt  40 i5_pt -1.5;
param i0_po 100 i1_po 0.12 i2_po 0.08 i3_po 0.04 i4_po  40 i5_po -1.5;
param i0_au 100 i1_au 0.12 i2_au 0.08 i3_au 0.04 i4_au  40 i5_au -1.5;
param m0_nl 75 m1_nl 0.23 m2_nl -35 m3_nl -1.5;
param m0_uk 75 m1_uk 0.23 m2_uk -35 m3_uk -1.5;
param m0_be 75 m1_be 0.23 m2_be -35 m3_be -1.5;
param m0_ge 75 m1_ge 0.23 m2_ge -35 m3_ge -1.5;
param m0_fr 75 m1_fr 0.23 m2_fr -35 m3_fr -1.5;
param m0_es 75 m1_es 0.23 m2_es -35 m3_es -1.5;
param m0_dk 75 m1_dk 0.23 m2_dk -35 m3_dk -1.5;
param m0_us 75 m1_us 0.23 m2_us -35 m3_us -1.5;
param m0_it 75 m1_it 0.23 m2_it -35 m3_it -1.5;
param m0_ch 75 m1_ch 0.23 m2_ch -35 m3_ch -1.5;
param m0_se 75 m1_se 0.23 m2_se -35 m3_se -1.5;
param m0_no 75 m1_no 0.23 m2_no -35 m3_no -1.5;
param m0_fi 75 m1_fi 0.23 m2_fi -35 m3_fi -1.5;
param m0_ir 75 m1_ir 0.23 m2_ir -35 m3_ir -1.5;
param m0_in 75 m1_in 0.23 m2_in -35 m3_in -1.5;
param m0_jp 75 m1_jp 0.23 m2_jp -35 m3_jp -1.5;
param m0_ru 75 m1_ru 0.23 m2_ru -35 m3_ru -1.5;
param m0_pt 75 m1_pt 0.23 m2_pt -35 m3_pt -1.5;
param m0_po 75 m1_po 0.23 m2_po -35 m3_po -1.5;
param m0_au 75 m1_au 0.23 m2_au -35 m3_au -1.5;
param t0_nl -15 t1_nl 0.22;
param t0_uk -15 t1_uk 0.22;
param t0_be -15 t1_be 0.22;
param t0_ge -15 t1_ge 0.22;
param t0_fr -15 t1_fr 0.22;
param t0_es -15 t1_es 0.22;
param t0_dk -15 t1_dk 0.22;
param t0_us -15 t1_us 0.22;
param t0_it -15 t1_it 0.22;
param t0_ch -15 t1_ch 0.22;
param t0_se -15 t1_se 0.22;
param t0_no -15 t1_no 0.22;
param t0_fi -15 t1_fi 0.22;
param t0_ir -15 t1_ir 0.22;
param t0_in -15 t1_in 0.22;
param t0_jp -15 t1_jp 0.22;
param t0_ru -15 t1_ru 0.22;
param t0_pt -15 t1_pt 0.22;
param t0_po -15 t1_po 0.22;
param t0_au -15 t1_au 0.22;
 
ident y_nl = c_nl + i_nl + g_nl;
ident y_uk = c_uk + i_uk + g_uk;
ident y_be = c_be + i_be + g_be;
ident y_ge = c_ge + i_ge + g_ge;
ident y_fr = c_fr + i_fr + g_fr;
ident y_es = c_es + i_es + g_es;
ident y_dk = c_dk + i_dk + g_dk;
ident y_us = c_us + i_us + g_us;
ident y_it = c_it + i_it + g_it;
ident y_ch = c_ch + i_ch + g_ch;
ident y_se = c_se + i_se + g_se;
ident y_no = c_no + i_no + g_no;
ident y_fi = c_fi + i_fi + g_fi;
ident y_ir = c_ir + i_ir + g_ir;
ident y_in = c_in + i_in + g_in;
ident y_jp = c_jp + i_jp + g_jp;
ident y_ru = c_ru + i_ru + g_ru;
ident y_pt = c_pt + i_pt + g_pt;
ident y_po = c_po + i_po + g_po;
ident y_au = c_au + i_au + g_au;
ident yd_nl = y_nl - t_nl;
ident yd_uk = y_uk - t_uk;
ident yd_be = y_be - t_be;
ident yd_ge = y_ge - t_ge;
ident yd_fr = y_fr - t_fr;
ident yd_es = y_es - t_es;
ident yd_dk = y_dk - t_dk;
ident yd_us = y_us - t_us;
ident yd_it = y_it - t_it;
ident yd_ch = y_ch - t_ch;
ident yd_se = y_se - t_se;
ident yd_no = y_no - t_no;
ident yd_fi = y_fi - t_fi;
ident yd_ir = y_ir - t_ir;
ident yd_in = y_in - t_in;
ident yd_jp = y_jp - t_jp;
ident yd_ru = y_ru - t_ru;
ident yd_pt = y_pt - t_pt;
ident yd_po = y_po - t_po;
ident yd_au = y_au - t_au;
ident t_nl = t0_nl + t1_nl * y_nl;
ident t_uk = t0_uk + t1_uk * y_uk;
ident t_be = t0_be + t1_be * y_be;
ident t_ge = t0_ge + t1_ge * y_ge;
ident t_fr = t0_fr + t1_fr * y_fr;
ident t_es = t0_es + t1_es * y_es;
ident t_dk = t0_dk + t1_dk * y_dk;
ident t_us = t0_us + t1_us * y_us;
ident t_it = t0_it + t1_it * y_it;
ident t_ch = t0_ch + t1_ch * y_ch;
ident t_se = t0_se + t1_se * y_se;
ident t_no = t0_no + t1_no * y_no;
ident t_fi = t0_fi + t1_fi * y_fi;
ident t_ir = t0_ir + t1_ir * y_ir;
ident t_in = t0_in + t1_in * y_in;
ident t_jp = t0_jp + t1_jp * y_jp;
ident t_ru = t0_ru + t1_ru * y_ru;
ident t_pt = t0_pt + t1_pt * y_pt;
ident t_po = t0_po + t1_po * y_po;
ident t_au = t0_au + t1_au * y_au;
ident c_nl = c0_nl + c1_nl * yd_nl(-1) + c2_nl * yd_nl + c3_nl * yd_nl(-2) 
                   + c4_nl * r_nl + c5_nl * r_nl**2;
ident c_uk = c0_uk + c1_uk * yd_uk(-1) + c2_uk * yd_uk + c3_uk * yd_uk(-2) 
                   + c4_uk * r_uk + c5_uk * r_uk**2;
ident c_be = c0_be + c1_be * yd_be(-1) + c2_be * yd_be + c3_be * yd_be(-2) 
                   + c4_be * r_be + c5_be * r_be**2;
ident c_ge = c0_ge + c1_ge * yd_ge(-1) + c2_ge * yd_ge + c3_ge * yd_ge(-2) 
                   + c4_ge * r_ge + c5_ge * r_ge**2;
ident c_fr = c0_fr + c1_fr * yd_fr(-1) + c2_fr * yd_fr + c3_fr * yd_fr(-2) 
                   + c4_fr * r_fr + c5_fr * r_fr**2;
ident c_es = c0_es + c1_es * yd_es(-1) + c2_es * yd_es + c3_es * yd_es(-2) 
                   + c4_es * r_es + c5_es * r_es**2;
ident c_dk = c0_dk + c1_dk * yd_dk(-1) + c2_dk * yd_dk + c3_dk * yd_dk(-2) 
                   + c4_dk * r_dk + c5_dk * r_dk**2;
ident c_us = c0_us + c1_us * yd_us(-1) + c2_us * yd_us + c3_us * yd_us(-2) 
                   + c4_us * r_us + c5_us * r_us**2;
ident c_it = c0_it + c1_it * yd_it(-1) + c2_it * yd_it + c3_it * yd_it(-2) 
                   + c4_it * r_it + c5_it * r_it**2;
ident c_ch = c0_ch + c1_ch * yd_ch(-1) + c2_ch * yd_ch + c3_ch * yd_ch(-2) 
                   + c4_ch * r_ch + c5_ch * r_ch**2;
ident c_se = c0_se + c1_se * yd_se(-1) + c2_se * yd_se + c3_se * yd_se(-2) 
                   + c4_se * r_se + c5_se * r_se**2;
ident c_no = c0_no + c1_no * yd_no(-1) + c2_no * yd_no + c3_no * yd_no(-2) 
                   + c4_no * r_no + c5_no * r_no**2;
ident c_fi = c0_fi + c1_fi * yd_fi(-1) + c2_fi * yd_fi + c3_fi * yd_fi(-2) 
                   + c4_fi * r_fi + c5_fi * r_fi**2;
ident c_ir = c0_ir + c1_ir * yd_ir(-1) + c2_ir * yd_ir + c3_ir * yd_ir(-2) 
                   + c4_ir * r_ir + c5_ir * r_ir**2;
ident c_in = c0_in + c1_in * yd_in(-1) + c2_in * yd_in + c3_in * yd_in(-2) 
                   + c4_in * r_in + c5_in * r_in**2;
ident c_jp = c0_jp + c1_jp * yd_jp(-1) + c2_jp * yd_jp + c3_jp * yd_jp(-2) 
                   + c4_jp * r_jp + c5_jp * r_jp**2;
ident c_ru = c0_ru + c1_ru * yd_ru(-1) + c2_ru * yd_ru + c3_ru * yd_ru(-2) 
                   + c4_ru * r_ru + c5_ru * r_ru**2;
ident c_pt = c0_pt + c1_pt * yd_pt(-1) + c2_pt * yd_pt + c3_pt * yd_pt(-2) 
                   + c4_pt * r_pt + c5_pt * r_pt**2;
ident c_po = c0_po + c1_po * yd_po(-1) + c2_po * yd_po + c3_po * yd_po(-2) 
                   + c4_po * r_po + c5_po * r_po**2;
ident c_au = c0_au + c1_au * yd_au(-1) + c2_au * yd_au + c3_au * yd_au(-2) 
                   + c4_au * r_au + c5_au * r_au**2;
ident i_nl = i0_nl + i1_nl * y_nl(-1) + i2_nl * y_nl + i3_nl * y_nl(-2) 
                   + i4_nl * r_nl + i5_nl * r_nl**2;
ident i_uk = i0_uk + i1_uk * y_uk(-1) + i2_uk * y_uk + i3_uk * y_uk(-2) 
                   + i4_uk * r_uk + i5_uk * r_uk**2;
ident i_be = i0_be + i1_be * y_be(-1) + i2_be * y_be + i3_be * y_be(-2) 
                   + i4_be * r_be + i5_be * r_be**2;
ident i_ge = i0_ge + i1_ge * y_ge(-1) + i2_ge * y_ge + i3_ge * y_ge(-2) 
                   + i4_ge * r_ge + i5_ge * r_ge**2;
ident i_fr = i0_fr + i1_fr * y_fr(-1) + i2_fr * y_fr + i3_fr * y_fr(-2) 
                   + i4_fr * r_fr + i5_fr * r_fr**2;
ident i_es = i0_es + i1_es * y_es(-1) + i2_es * y_es + i3_es * y_es(-2) 
                   + i4_es * r_es + i5_es * r_es**2;
ident i_dk = i0_dk + i1_dk * y_dk(-1) + i2_dk * y_dk + i3_dk * y_dk(-2) 
                   + i4_dk * r_dk + i5_dk * r_dk**2;
ident i_us = i0_us + i1_us * y_us(-1) + i2_us * y_us + i3_us * y_us(-2) 
                   + i4_us * r_us + i5_us * r_us**2;
ident i_it = i0_it + i1_it * y_it(-1) + i2_it * y_it + i3_it * y_it(-2) 
                   + i4_it * r_it + i5_it * r_it**2;
ident i_ch = i0_ch + i1_ch * y_ch(-1) + i2_ch * y_ch + i3_ch * y_ch(-2) 
                   + i4_ch * r_ch + i5_ch * r_ch**2;
ident i_se = i0_se + i1_se * y_se(-1) + i2_se * y_se + i3_se * y_se(-2) 
                   + i4_se * r_se + i5_se * r_se**2;
ident i_no = i0_no + i1_no * y_no(-1) + i2_no * y_no + i3_no * y_no(-2) 
                   + i4_no * r_no + i5_no * r_no**2;
ident i_fi = i0_fi + i1_fi * y_fi(-1) + i2_fi * y_fi + i3_fi * y_fi(-2) 
                   + i4_fi * r_fi + i5_fi * r_fi**2;
ident i_ir = i0_ir + i1_ir * y_ir(-1) + i2_ir * y_ir + i3_ir * y_ir(-2) 
                   + i4_ir * r_ir + i5_ir * r_ir**2;
ident i_in = i0_in + i1_in * y_in(-1) + i2_in * y_in + i3_in * y_in(-2) 
                   + i4_in * r_in + i5_in * r_in**2;
ident i_jp = i0_jp + i1_jp * y_jp(-1) + i2_jp * y_jp + i3_jp * y_jp(-2) 
                   + i4_jp * r_jp + i5_jp * r_jp**2;
ident i_ru = i0_ru + i1_ru * y_ru(-1) + i2_ru * y_ru + i3_ru * y_ru(-2) 
                   + i4_ru * r_ru + i5_ru * r_ru**2;
ident i_pt = i0_pt + i1_pt * y_pt(-1) + i2_pt * y_pt + i3_pt * y_pt(-2) 
                   + i4_pt * r_pt + i5_pt * r_pt**2;
ident i_po = i0_po + i1_po * y_po(-1) + i2_po * y_po + i3_po * y_po(-2) 
                   + i4_po * r_po + i5_po * r_po**2;
ident i_au = i0_au + i1_au * y_au(-1) + i2_au * y_au + i3_au * y_au(-2) 
                   + i4_au * r_au + i5_au * r_au**2;
ident md_nl = m0_nl + m1_nl * y_nl + m2_nl * r_nl + m3_nl * r_nl**2;
ident md_uk = m0_uk + m1_uk * y_uk + m2_uk * r_uk + m3_uk * r_uk**2;
ident md_be = m0_be + m1_be * y_be + m2_be * r_be + m3_be * r_be**2;
ident md_ge = m0_ge + m1_ge * y_ge + m2_ge * r_ge + m3_ge * r_ge**2;
ident md_fr = m0_fr + m1_fr * y_fr + m2_fr * r_fr + m3_fr * r_fr**2;
ident md_es = m0_es + m1_es * y_es + m2_es * r_es + m3_es * r_es**2;
ident md_dk = m0_dk + m1_dk * y_dk + m2_dk * r_dk + m3_dk * r_dk**2;
ident md_us = m0_us + m1_us * y_us + m2_us * r_us + m3_us * r_us**2;
ident md_it = m0_it + m1_it * y_it + m2_it * r_it + m3_it * r_it**2;
ident md_ch = m0_ch + m1_ch * y_ch + m2_ch * r_ch + m3_ch * r_ch**2;
ident md_se = m0_se + m1_se * y_se + m2_se * r_se + m3_se * r_se**2;
ident md_no = m0_no + m1_no * y_no + m2_no * r_no + m3_no * r_no**2;
ident md_fi = m0_fi + m1_fi * y_fi + m2_fi * r_fi + m3_fi * r_fi**2;
ident md_ir = m0_ir + m1_ir * y_ir + m2_ir * r_ir + m3_ir * r_ir**2;
ident md_in = m0_in + m1_in * y_in + m2_in * r_in + m3_in * r_in**2;
ident md_jp = m0_jp + m1_jp * y_jp + m2_jp * r_jp + m3_jp * r_jp**2;
ident md_ru = m0_ru + m1_ru * y_ru + m2_ru * r_ru + m3_ru * r_ru**2;
ident md_pt = m0_pt + m1_pt * y_pt + m2_pt * r_pt + m3_pt * r_pt**2;
ident md_po = m0_po + m1_po * y_po + m2_po * r_po + m3_po * r_po**2;
ident md_au = m0_au + m1_au * y_au + m2_au * r_au + m3_au * r_au**2;
ident r_nl = r_nl + (md_nl - ms_nl) / ms_nl;
ident r_uk = r_uk + (md_uk - ms_uk) / ms_uk;
ident r_be = r_be + (md_be - ms_be) / ms_be;
ident r_ge = r_ge + (md_ge - ms_ge) / ms_ge;
ident r_fr = r_fr + (md_fr - ms_fr) / ms_fr;
ident r_es = r_es + (md_es - ms_es) / ms_es;
ident r_dk = r_dk + (md_dk - ms_dk) / ms_dk;
ident r_us = r_us + (md_us - ms_us) / ms_us;
ident r_it = r_it + (md_it - ms_it) / ms_it;
ident r_ch = r_ch + (md_ch - ms_ch) / ms_ch;
ident r_se = r_se + (md_se - ms_se) / ms_se;
ident r_no = r_no + (md_no - ms_no) / ms_no;
ident r_fi = r_fi + (md_fi - ms_fi) / ms_fi;
ident r_ir = r_ir + (md_ir - ms_ir) / ms_ir;
ident r_in = r_in + (md_in - ms_in) / ms_in;
ident r_jp = r_jp + (md_jp - ms_jp) / ms_jp;
ident r_ru = r_ru + (md_ru - ms_ru) / ms_ru;
ident r_pt = r_pt + (md_pt - ms_pt) / ms_pt;
ident r_po = r_po + (md_po - ms_po) / ms_po;
ident r_au = r_au + (md_au - ms_au) / ms_au;
 
? extra countries
? $expa(CO; 1/10) 
 
param c0_co_1 100 c1_co_1 0.28 c2_co_1 0.32 c3_co_1 0.10 c4_co_1 -20 c5_co_1 1;
param c0_co_2 100 c1_co_2 0.28 c2_co_2 0.32 c3_co_2 0.10 c4_co_2 -20 c5_co_2 1;
param c0_co_3 100 c1_co_3 0.28 c2_co_3 0.32 c3_co_3 0.10 c4_co_3 -20 c5_co_3 1;
param c0_co_4 100 c1_co_4 0.28 c2_co_4 0.32 c3_co_4 0.10 c4_co_4 -20 c5_co_4 1;
param c0_co_5 100 c1_co_5 0.28 c2_co_5 0.32 c3_co_5 0.10 c4_co_5 -20 c5_co_5 1;
param c0_co_6 100 c1_co_6 0.28 c2_co_6 0.32 c3_co_6 0.10 c4_co_6 -20 c5_co_6 1;
param c0_co_7 100 c1_co_7 0.28 c2_co_7 0.32 c3_co_7 0.10 c4_co_7 -20 c5_co_7 1;
param c0_co_8 100 c1_co_8 0.28 c2_co_8 0.32 c3_co_8 0.10 c4_co_8 -20 c5_co_8 1;
param c0_co_9 100 c1_co_9 0.28 c2_co_9 0.32 c3_co_9 0.10 c4_co_9 -20 c5_co_9 1;
param c0_co_10 100 c1_co_10 0.28 c2_co_10 0.32 c3_co_10 0.10 c4_co_10 -20
       c5_co_10 1;
param i0_co_1 100 i1_co_1 0.12 i2_co_1 0.08 i3_co_1 0.04 i4_co_1  40 i5_co_1 
      -1.5;
param i0_co_2 100 i1_co_2 0.12 i2_co_2 0.08 i3_co_2 0.04 i4_co_2  40 i5_co_2 
      -1.5;
param i0_co_3 100 i1_co_3 0.12 i2_co_3 0.08 i3_co_3 0.04 i4_co_3  40 i5_co_3 
      -1.5;
param i0_co_4 100 i1_co_4 0.12 i2_co_4 0.08 i3_co_4 0.04 i4_co_4  40 i5_co_4 
      -1.5;
param i0_co_5 100 i1_co_5 0.12 i2_co_5 0.08 i3_co_5 0.04 i4_co_5  40 i5_co_5 
      -1.5;
param i0_co_6 100 i1_co_6 0.12 i2_co_6 0.08 i3_co_6 0.04 i4_co_6  40 i5_co_6 
      -1.5;
param i0_co_7 100 i1_co_7 0.12 i2_co_7 0.08 i3_co_7 0.04 i4_co_7  40 i5_co_7 
      -1.5;
param i0_co_8 100 i1_co_8 0.12 i2_co_8 0.08 i3_co_8 0.04 i4_co_8  40 i5_co_8 
      -1.5;
param i0_co_9 100 i1_co_9 0.12 i2_co_9 0.08 i3_co_9 0.04 i4_co_9  40 i5_co_9 
      -1.5;
param i0_co_10 100 i1_co_10 0.12 i2_co_10 0.08 i3_co_10 0.04 i4_co_10  40
       i5_co_10 -1.5;
param m0_co_1 75 m1_co_1 0.23 m2_co_1 -35 m3_co_1 -1.5;
param m0_co_2 75 m1_co_2 0.23 m2_co_2 -35 m3_co_2 -1.5;
param m0_co_3 75 m1_co_3 0.23 m2_co_3 -35 m3_co_3 -1.5;
param m0_co_4 75 m1_co_4 0.23 m2_co_4 -35 m3_co_4 -1.5;
param m0_co_5 75 m1_co_5 0.23 m2_co_5 -35 m3_co_5 -1.5;
param m0_co_6 75 m1_co_6 0.23 m2_co_6 -35 m3_co_6 -1.5;
param m0_co_7 75 m1_co_7 0.23 m2_co_7 -35 m3_co_7 -1.5;
param m0_co_8 75 m1_co_8 0.23 m2_co_8 -35 m3_co_8 -1.5;
param m0_co_9 75 m1_co_9 0.23 m2_co_9 -35 m3_co_9 -1.5;
param m0_co_10 75 m1_co_10 0.23 m2_co_10 -35 m3_co_10 -1.5;
param t0_co_1 -15 t1_co_1 0.22;
param t0_co_2 -15 t1_co_2 0.22;
param t0_co_3 -15 t1_co_3 0.22;
param t0_co_4 -15 t1_co_4 0.22;
param t0_co_5 -15 t1_co_5 0.22;
param t0_co_6 -15 t1_co_6 0.22;
param t0_co_7 -15 t1_co_7 0.22;
param t0_co_8 -15 t1_co_8 0.22;
param t0_co_9 -15 t1_co_9 0.22;
param t0_co_10 -15 t1_co_10 0.22;
 
ident y_co_1 = c_co_1 + i_co_1 + g_co_1;
ident y_co_2 = c_co_2 + i_co_2 + g_co_2;
ident y_co_3 = c_co_3 + i_co_3 + g_co_3;
ident y_co_4 = c_co_4 + i_co_4 + g_co_4;
ident y_co_5 = c_co_5 + i_co_5 + g_co_5;
ident y_co_6 = c_co_6 + i_co_6 + g_co_6;
ident y_co_7 = c_co_7 + i_co_7 + g_co_7;
ident y_co_8 = c_co_8 + i_co_8 + g_co_8;
ident y_co_9 = c_co_9 + i_co_9 + g_co_9;
ident y_co_10 = c_co_10 + i_co_10 + g_co_10;
ident yd_co_1 = y_co_1 - t_co_1;
ident yd_co_2 = y_co_2 - t_co_2;
ident yd_co_3 = y_co_3 - t_co_3;
ident yd_co_4 = y_co_4 - t_co_4;
ident yd_co_5 = y_co_5 - t_co_5;
ident yd_co_6 = y_co_6 - t_co_6;
ident yd_co_7 = y_co_7 - t_co_7;
ident yd_co_8 = y_co_8 - t_co_8;
ident yd_co_9 = y_co_9 - t_co_9;
ident yd_co_10 = y_co_10 - t_co_10;
ident t_co_1 = t0_co_1 + t1_co_1 * y_co_1;
ident t_co_2 = t0_co_2 + t1_co_2 * y_co_2;
ident t_co_3 = t0_co_3 + t1_co_3 * y_co_3;
ident t_co_4 = t0_co_4 + t1_co_4 * y_co_4;
ident t_co_5 = t0_co_5 + t1_co_5 * y_co_5;
ident t_co_6 = t0_co_6 + t1_co_6 * y_co_6;
ident t_co_7 = t0_co_7 + t1_co_7 * y_co_7;
ident t_co_8 = t0_co_8 + t1_co_8 * y_co_8;
ident t_co_9 = t0_co_9 + t1_co_9 * y_co_9;
ident t_co_10 = t0_co_10 + t1_co_10 * y_co_10;
ident c_co_1 = c0_co_1 + c1_co_1 * yd_co_1(-1) + c2_co_1 * yd_co_1 + c3_co_1 *
       yd_co_1(-2) 
                   + c4_co_1 * r_co_1 + c5_co_1 * r_co_1**2;
ident c_co_2 = c0_co_2 + c1_co_2 * yd_co_2(-1) + c2_co_2 * yd_co_2 + c3_co_2 *
       yd_co_2(-2) 
                   + c4_co_2 * r_co_2 + c5_co_2 * r_co_2**2;
ident c_co_3 = c0_co_3 + c1_co_3 * yd_co_3(-1) + c2_co_3 * yd_co_3 + c3_co_3 *
       yd_co_3(-2) 
                   + c4_co_3 * r_co_3 + c5_co_3 * r_co_3**2;
ident c_co_4 = c0_co_4 + c1_co_4 * yd_co_4(-1) + c2_co_4 * yd_co_4 + c3_co_4 *
       yd_co_4(-2) 
                   + c4_co_4 * r_co_4 + c5_co_4 * r_co_4**2;
ident c_co_5 = c0_co_5 + c1_co_5 * yd_co_5(-1) + c2_co_5 * yd_co_5 + c3_co_5 *
       yd_co_5(-2) 
                   + c4_co_5 * r_co_5 + c5_co_5 * r_co_5**2;
ident c_co_6 = c0_co_6 + c1_co_6 * yd_co_6(-1) + c2_co_6 * yd_co_6 + c3_co_6 *
       yd_co_6(-2) 
                   + c4_co_6 * r_co_6 + c5_co_6 * r_co_6**2;
ident c_co_7 = c0_co_7 + c1_co_7 * yd_co_7(-1) + c2_co_7 * yd_co_7 + c3_co_7 *
       yd_co_7(-2) 
                   + c4_co_7 * r_co_7 + c5_co_7 * r_co_7**2;
ident c_co_8 = c0_co_8 + c1_co_8 * yd_co_8(-1) + c2_co_8 * yd_co_8 + c3_co_8 *
       yd_co_8(-2) 
                   + c4_co_8 * r_co_8 + c5_co_8 * r_co_8**2;
ident c_co_9 = c0_co_9 + c1_co_9 * yd_co_9(-1) + c2_co_9 * yd_co_9 + c3_co_9 *
       yd_co_9(-2) 
                   + c4_co_9 * r_co_9 + c5_co_9 * r_co_9**2;
ident c_co_10 = c0_co_10 + c1_co_10 * yd_co_10(-1) + c2_co_10 * yd_co_10 +
       c3_co_10 * yd_co_10(-2) 
                   + c4_co_10 * r_co_10 + c5_co_10 * r_co_10**2;
ident i_co_1 = i0_co_1 + i1_co_1 * y_co_1(-1) + i2_co_1 * y_co_1 + i3_co_1 *
       y_co_1(-2) 
                   + i4_co_1 * r_co_1 + i5_co_1 * r_co_1**2;
ident i_co_2 = i0_co_2 + i1_co_2 * y_co_2(-1) + i2_co_2 * y_co_2 + i3_co_2 *
       y_co_2(-2) 
                   + i4_co_2 * r_co_2 + i5_co_2 * r_co_2**2;
ident i_co_3 = i0_co_3 + i1_co_3 * y_co_3(-1) + i2_co_3 * y_co_3 + i3_co_3 *
       y_co_3(-2) 
                   + i4_co_3 * r_co_3 + i5_co_3 * r_co_3**2;
ident i_co_4 = i0_co_4 + i1_co_4 * y_co_4(-1) + i2_co_4 * y_co_4 + i3_co_4 *
       y_co_4(-2) 
                   + i4_co_4 * r_co_4 + i5_co_4 * r_co_4**2;
ident i_co_5 = i0_co_5 + i1_co_5 * y_co_5(-1) + i2_co_5 * y_co_5 + i3_co_5 *
       y_co_5(-2) 
                   + i4_co_5 * r_co_5 + i5_co_5 * r_co_5**2;
ident i_co_6 = i0_co_6 + i1_co_6 * y_co_6(-1) + i2_co_6 * y_co_6 + i3_co_6 *
       y_co_6(-2) 
                   + i4_co_6 * r_co_6 + i5_co_6 * r_co_6**2;
ident i_co_7 = i0_co_7 + i1_co_7 * y_co_7(-1) + i2_co_7 * y_co_7 + i3_co_7 *
       y_co_7(-2) 
                   + i4_co_7 * r_co_7 + i5_co_7 * r_co_7**2;
ident i_co_8 = i0_co_8 + i1_co_8 * y_co_8(-1) + i2_co_8 * y_co_8 + i3_co_8 *
       y_co_8(-2) 
                   + i4_co_8 * r_co_8 + i5_co_8 * r_co_8**2;
ident i_co_9 = i0_co_9 + i1_co_9 * y_co_9(-1) + i2_co_9 * y_co_9 + i3_co_9 *
       y_co_9(-2) 
                   + i4_co_9 * r_co_9 + i5_co_9 * r_co_9**2;
ident i_co_10 = i0_co_10 + i1_co_10 * y_co_10(-1) + i2_co_10 * y_co_10 +
       i3_co_10 * y_co_10(-2) 
                   + i4_co_10 * r_co_10 + i5_co_10 * r_co_10**2;
ident md_co_1 = m0_co_1 + m1_co_1 * y_co_1 + m2_co_1 * r_co_1 + m3_co_1 *
       r_co_1**2;
ident md_co_2 = m0_co_2 + m1_co_2 * y_co_2 + m2_co_2 * r_co_2 + m3_co_2 *
       r_co_2**2;
ident md_co_3 = m0_co_3 + m1_co_3 * y_co_3 + m2_co_3 * r_co_3 + m3_co_3 *
       r_co_3**2;
ident md_co_4 = m0_co_4 + m1_co_4 * y_co_4 + m2_co_4 * r_co_4 + m3_co_4 *
       r_co_4**2;
ident md_co_5 = m0_co_5 + m1_co_5 * y_co_5 + m2_co_5 * r_co_5 + m3_co_5 *
       r_co_5**2;
ident md_co_6 = m0_co_6 + m1_co_6 * y_co_6 + m2_co_6 * r_co_6 + m3_co_6 *
       r_co_6**2;
ident md_co_7 = m0_co_7 + m1_co_7 * y_co_7 + m2_co_7 * r_co_7 + m3_co_7 *
       r_co_7**2;
ident md_co_8 = m0_co_8 + m1_co_8 * y_co_8 + m2_co_8 * r_co_8 + m3_co_8 *
       r_co_8**2;
ident md_co_9 = m0_co_9 + m1_co_9 * y_co_9 + m2_co_9 * r_co_9 + m3_co_9 *
       r_co_9**2;
ident md_co_10 = m0_co_10 + m1_co_10 * y_co_10 + m2_co_10 * r_co_10 + m3_co_10 
      * r_co_10**2;
ident r_co_1 = r_co_1 + (md_co_1 - ms_co_1) / ms_co_1;
ident r_co_2 = r_co_2 + (md_co_2 - ms_co_2) / ms_co_2;
ident r_co_3 = r_co_3 + (md_co_3 - ms_co_3) / ms_co_3;
ident r_co_4 = r_co_4 + (md_co_4 - ms_co_4) / ms_co_4;
ident r_co_5 = r_co_5 + (md_co_5 - ms_co_5) / ms_co_5;
ident r_co_6 = r_co_6 + (md_co_6 - ms_co_6) / ms_co_6;
ident r_co_7 = r_co_7 + (md_co_7 - ms_co_7) / ms_co_7;
ident r_co_8 = r_co_8 + (md_co_8 - ms_co_8) / ms_co_8;
ident r_co_9 = r_co_9 + (md_co_9 - ms_co_9) / ms_co_9;
ident r_co_10 = r_co_10 + (md_co_10 - ms_co_10) / ms_co_10;
