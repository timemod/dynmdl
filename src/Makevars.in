PKG_CXXFLAGS = @DEFS@ -DUSE_R -I.\
# the -I. is for FlexLexer.h

SUBDIR = macro
SUBLIB = lib$(SUBDIR).a
PKG_LIBS = $(SUBDIR)/$(SUBLIB)
YACC = @YACC@
LEX = @LEX@
LEXINC = @LEXINC@
LEX_YACC_DIR = lex_yacc

## For the final version of the package, we have to clean the sublib here, 
## to clean up between architectures:
## INSTALL only cleans src/*.o src/*$(SHLIB_EXT) for each arch
#all : subclean sublib $(SHLIB) DynareFlex.o DynareBison.o

# While developping on the same architecture is not not necessary
# to clean sublib
all : sublib $(SHLIB) DynareFlex.o DynareBison.o

$(SHLIB) : check_source_files $(OBJECTS) $(SUBDIR)/$(SUBLIB)

subclean:
	@(cd $(SUBDIR) && $(MAKE) $(SUBLIB) clean)

$(SHLIB) : $(OBJECTS) $(SUBDIR)/$(SUBLIB)

sublib:
	 @(cd $(SUBDIR)&& $(MAKE) \
	  CXX="$(CXX)" \
          CXXFLAGS="$(CXXFLAGS) $(PKG_CXXFLAGS) $(CPICFLAGS) $(CLINK_CPPFLAGS)" \
	  AR="$(AR)" RANLIB="$(RANLIB)")

DEPS_DIR = deps
DEP_FILE = $(DEPS_DIR)/makedeps
DEP_PKL = $(DEPS_DIR)/deps.pkl
SRC_C = $(wildcard *.c*)
SRC_H =  $(wildcard *.h*)
PYTHON = python

check_source_files:
	@$(PYTHON) $(DEPS_DIR)/check_srcfiles.py

$(DEP_FILE) : $(DEP_PKL)
	@$(PYTHON) $(DEPS_DIR)/write_makedeps.py $(DEP_PKL) $@

$(DEP_PKL) : $(SRC_C) $(SRC_H)
	@$(PYTHON) $(DEPS_DIR)/gendepend.py $@ $(?F)

# dependencies C files
include $(DEP_FILE)

DynareFlex.o : DynareFlex.cc FlexLexer.h
DynareBison.o : DynareBison.cc

DynareFlex.cc FlexLexer.h : $(LEX_YACC_DIR)/DynareFlex.ll
	$(LEX) -o DynareFlex.cc DynareFlex.ll
        # Copy FlexLexer.h from $LEXINC. Otherwise the code cannot
        # be compiled on systems where lex is not available, or where
        # the version of lex is incompatible with the version used
        # to generate DynareFlex.cc
	cp $(LEXINC)/FlexLexer.h .

DynareBison.cc DynareBison.hh location.hh stack.hh position.hh: $(LEX_YACC_DIR)/DynareBison.yy
	$(YACC) -o DynareBison.cc $(LEX_YACC_DIR)/DynareBison.yy
