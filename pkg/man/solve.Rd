% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc.R
\name{solve}
\alias{solve}
\title{\code{\link{DynMdl}} method: Solves the model}
\description{
This method of R6 class \code{\link{DynMdl}} solves
the model.
}
\section{Usage}{

\code{DynMdl} method:
\preformatted{
 md$solve(control = list(), force_stacked_time = FALSE,
            solver = c("umfpackr", "nleqslv"), ...)
}

\code{mdl} is an \code{\link{DynMdl}} object
}

\section{Arguments}{


\describe{
\item{\code{control}}{A named list of control parameters passed to function
\code{\link[umfpackr]{umf_solve_nl}} or \code{\link[nleqslv]{nleqslv}},
depending on argument \code{solver}}
\item{\code{force_stacked_time}}{a logical. If \code{TRUE}, the the 
model is solved using the stacked time Newton method, also for 
purely backward looking models.}
\item{\code{solver}}{Specifies the solver employed to solve the model:
\code{umfpackr} (sparse linear algebra) or \code{nleqslv} (dense linear algebra).
For large model, the \code{umfpackr} solve can be much faster.}
\item{\code{...}}{Other arguments passed to the solver}
}
}

\examples{
mdl <- islm_mdl(period = "2018Q1/2023Q3")
mdl$solve(control = list(trace = TRUE))
}
\seealso{
\code{\link{solve_steady}}
}
