% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc.R
\name{solve_steady}
\alias{solve_steady}
\title{\code{\link{DynMdl}} method: Solves the steady state.}
\description{
This method of R6 class \code{\link{DynMdl}} solves
the steady states.

The steady state function employs function \code{\link[nleqslv]{nleqslv}}
of the \code{nleqslv} package.
}
\section{Usage}{

\code{DynMdl} method:
\preformatted{
mdl$solve_steady(start = mdl$get_static_endos(),
                 init_data = TRUE, control,
                 solver = c("umfpackr", "nleqslv"))

}

\code{mdl} is an \code{\link{DynMdl}} object
}

\section{Arguments}{


\describe{
\item{\code{start}}{a numeric vector with an initial
guess of the steady state values of the endogenous variables}
\item{\code{init_data}}{a logical. If \code{TRUE}, then if the 
solve was succesfull the endogenous model variables are set to
the computed steady state values.}
\item{\code{control}}{A named list of control parameters passed to function
\code{\link[umfpackr]{umf_solve_nl}} or \code{\link[nleqslv]{nleqslv}},
depending on argument \code{solver}}
\item{\code{solver}}{Specifies the solver employed to solve the model:
\code{umfpackr} (sparse linear algebra) or \code{nleqslv} (dense linear algebra).
For large model, the \code{umfpackr} solve can be much faster.}
}
}

\examples{
mdl <- islm_mdl()
mdl$solve_steady(control = list(trace = 1))
}
\seealso{
\code{\link{solve}}
}
