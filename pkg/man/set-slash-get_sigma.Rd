% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc_fit.R
\name{set/get_sigma}
\alias{set/get_sigma}
\alias{set_sigma}
\alias{set_sigma_values}
\alias{get_sigmas}
\title{\code{\link{DynMdl}} methods: Set and get the sigma parameters for the
fit method}
\description{
\code{DynMdl} methods \code{set_sigma} and \code{set_sigma_values} can be
used to set the sigma parameters for the fit instruments used in the fit
method. The names of the sigma parameters are the names
of the instruments suffixed with \code{sigma_}. For example,
the name of the sigma parameter corresponding to instrument \code{"uc"}
is \code{"sigma_uc"}.

If a sigma parameter is smaller than 0, then the corresponding
fit instrument is not active, and is keeped fixed at
the current value, even though it is an endogenous model variable.

Method \code{get_sigmas} returns all sigma parameters larger than or equal
to zero.
}
\section{Usage}{

\preformatted{
mdl$set_sigma(sigmas, names, name_err = c("stop", "warn", "silent"))

mdl$set_sigma_values(value, names, pattern)

mdl$get_sigmas()
}
\code{mdl} is a \code{\link{DynMdl}} object.
}

\section{Arguments}{


\describe{
\item{\code{sigmas}}{a named numeric vector with values of the sigma
parameters. The names are the name of the instruments (not the names
of the sigma parameters).}
\item{\code{names}}{a character vector with names of fit instruments.
For method \code{set_sigma}, this argument \emph{must} be specified if
\code{sigmas} is a vector without names.}
\item{\code{name_err}}{this option specifies the action that should be taken
when a variable name is not a fit instrument.
For \code{"stop"} (the default), the execution of this function is stopped.
For \code{"warn"} and \code{"silent"}, the names timeseries that are no model
parameters are skipped. \code{"warn"} does however give a warning.}
\item{\code{value}}{a numeric vector of length 1.}
\item{\code{pattern}}{a regular expression. The values of the sigma
parameters corresponding to all fit instruments matching \code{pattern}
are set to the specified value.}
}
}

\section{Methods}{

\itemize{
\item \code{set_sigmas}: Set the sigma parameters using a named numeric
vector. The names of the vector should be the names of the corresponding
fit instruments.
\item \code{set_static_exo_values}: Give one or more sigma parameters
a specified value.
\item \code{get_sigmas}: Returns all sigma parameters greater than
or equal to zero.
}
}

\examples{
mdl <- islm_mdl(fit = TRUE)
mdl$set_sigma(c(umd = 12))

# disable fit instruments umd and umc
mdl$set_sigma_values(-1, names = c("umd", "uc"))

# print all sigma parameters for active fit instruments
print(mdl$get_sigmas())

# print names of all active instruments (sigma >= 0):
print(mdl$get_instrument_names())

# set all sigmas parameters to 1
mdl$set_sigma_values(1)

}
\seealso{
\code{\link{get_instrument_names}}, \code{\link{get_sigma_names}},
\code{\link{set_fit}} and \code{\link{clear_fit}}
}
