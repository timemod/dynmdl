% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc.R
\name{init_data}
\alias{init_data}
\title{\code{\link{DynMdl}} method: initializes the model data.}
\description{
This method of R6 class \code{\link{DynMdl}} initializes all model variables
with static values for the whole data period. All endogenous and exogenous variables,
fit instruments and lagrange multipliers are set to the static values.
Fit targets specified for the dynamic model are removed. If static fit targets
have been specified with method \code{\link{set_fit_steady}}, then the
dynamic fit targets are set to the static fit targets for the whole data period.

If argument \code{data} has been specified, then the model data
are subsequently updated with the timeseries in \code{data}.
For models implementing the fit method, \code{data} may include fit instruments
and lagrange multipliers. All timeseries in data that are no model variables,
fit instruments or lagrange multipliers are silently skipped.

If the model period has not yet been specified (in function
\code{\link{dyn_mdl}} or method \code{\link{set_period}}), then
this method also sets the model period, the standard period
for which the model is solved. The model period
is obtained from the data period by subtracting the lag and lead periods.
}
\section{Usage}{

\preformatted{
mdl$init_data(data_period, data = NULL, upd_mode = c("upd", "updval"),
              base_period)

}

\code{mdl} is a \code{DynMdl} object
}

\section{Arguments}{


\describe{
\item{\code{data_period}}{a \code{\link[regts]{period_range}}
object, or an object that can be coerced to
\code{\link[regts]{period_range}}. The (new) data period, i.e. the period
range of all model timeseries. If not specified, then the data period
is based on the model period, the period range of argument \code{data}
(if this argument has been specified), and the base period (if the model
has trend variables)}
\item{\code{data}}{a \code{\link[stats]{ts}} or \code{\link[regts]{regts}}
object with values for endogogenous and exogenous model variables,
including fit instruments and Lagrange multipliers used in the fit method.
If \code{data} has labels, then these labels are used to update the model
labels. If the model has trends, then the timeseries in \code{data} should
include the trends.}
\item{\code{upd_mode}}{the update mode, a character string specifying
how the timeseries in object \code{data} are transferred to the
model data. For  \code{"upd"} (standard update, default), the timseseries
in \code{data} are used to replace the steady state values of the
exogenous and endogenous model variables.
For \code{"updval"}, the static model variables are only replaced
by valid (i.e. non-\code{NA}) values in \code{data}). }
\item{\code{base_period}}{a \code{\link[regts]{period}} object specifying
the (new) base period for the trends. This is used if the model has trend variables.
All trend variables will be equal to 1 at the base period. This argument is
ignored for models without trends. If this argument is not specified, then
the base period is unchanged if it has already been specified in
function \code{dyn_mdl} or a previous  call of \code{init_data}, otherwise it is set
to the start period of the model period.}
}
If neither \code{data_period} nor \code{data} has been specified,
then the data period is unchanged. In that case the data period must have been
set before with method \code{init_data} or \code{set_period}.
}

\section{Warning}{

Method \code{init_data} removes all fit targets.
}

\examples{
mdl <- islm_mdl()
mdl$init_data("2017Q2/2021Q3")
print(mdl)

# since are variables have the steady state values, a subsequent solve will
# converge in 0 iterations
mdl$solve()
}
\seealso{
\code{\link{set_period}}
}
