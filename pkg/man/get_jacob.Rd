% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc.R
\name{get_jacob}
\alias{get_jacob}
\alias{get_static_jacob}
\alias{get_back_jacob}
\title{\code{\link{DynMdl}} methods: Return the Jacobian for the static or 
dynamic model}
\description{
These methods of R6 class \code{\link{DynMdl}} 
can be used to retrieve the Jacobian for the static or dynamic model.

The methods return a \code{matrix} object which can be further 
analysed using standard linear algebra functions.
This is particularly useful when method \code{\link{solve}} complains
about (nearly) singular Jacobians.
For example, an SVD decomposition using function 
\code{\link[base]{svd}} can be used to identify linearly
dependent rows or columns.
}
\section{Usage}{

\preformatted{
mdl$get_static_jacob(sparse = FALSE)

mdl$get_jacob(sparse = FALSE)

mdl$get_back_jacob(period, sparse = FALSE)

}
\code{mdl} is an \code{\link{DynMdl}} object
}

\section{Arguments}{


\describe{
\item{\code{sparse}}{a logical. If \code{TRUE}, then the matrix is
returned as a sparse matrix}
\item{\code{period}}{an \code{\link[regts]{period}} object or an
object that can be coerced to a \code{period}}
}
}

\section{Methods}{

\itemize{
\item \code{get_jacob}: The Jacobian for the dynamic model
This is the Jacobian used
when solving the model with the stacked-time Newton method.
\item \code{get_static_jacob}: The Jacobian for the static 
version of the model. This Jacobian  is used when solving the steady state.
\item \code{get_back_jacob}: The Jacobian at a specific period
for backward looking models, treating the lags as exogenous.
This Jacobian is used to solve backward looking models.
}
}

\examples{
mdl <- islm_mdl("2018Q1/2019Q4")
print(mdl$get_static_jacob())
print(mdl$get_jacob())

\dontrun{
# print the Jacobian for a backward looking model at period 2018Q3
print(backwards_mdl$get_back_jacob("2018Q3"))
}
}
