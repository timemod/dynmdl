% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynMdl_doc.R
\name{check}
\alias{check}
\title{\code{\link{DynMdl}} method: Compute the eigenvalues of the linearized model
around the steady state.}
\description{
This method of R6 class \code{\link{DynMdl}} constructs a linear model
around the state steady and finally computes the eigenvalues of the
linearized model around the steady state. It  also checks if the Blachard
and  Kahn conditions are satisfied. The Blanchard
and Kahn conditions state that the number of eigenvalues larger than 1
should be equal to the number of forward looking variables
(variables with leads).

By default, the steady state is first computed with method \code{solve_steady},
but computing the steady state can be suppressed by specifying argument
argument  \code{solve_steady = FALSE}. This argument is useful
if the steady state cannot be computed, or if you want
to linearize the model around another point than the steady state.
If \code{solve_steady} is \code{FALSE}, then the model is linearlized using the
current values of the static endogenous variables, as specified with for example
\code{\link{set_static_endos}}.
}
\section{Usage}{


\preformatted{
mdl$check(tol = sqrt(.Machine$double.eps), solve_steady = TRUE,
          silent = TRUE, ...)
}

\code{mdl} is a \code{\link{DynMdl}} object
}

\section{Arguments}{


\describe{
\item{\code{tol}}{The tolerance parameter used to test if an eigenvalue
is significantly larger than 1 when checking the Blanchard-Kahn
conditions. The default is the square root of the machine precision
(typically about 1.5e-8). See Details.}
\item{\code{solve_steady}}{A logical (default \code{TRUE}), indicating when
\code{check} should first compute the steady state using method
\code{\link{solve_steady}}.}
\item{\code{silent}}{A logical. If \code{TRUE} (the default), then all
output when solving the steady state is suppressed.}
\item{\code{...}}{Other arguments passed to the \code{\link{solve_steady}}.}
}
}

\section{Details}{


To test if the Blanchard-Kahn conditions are satisfied, we need to
determine the number of eigenvalues larger than 1. If
an eigenvalue is exactly equal to 1, the actually calculated eigenvalue
may be slightly larger than 1 because of rounding errors. To check the
Blanchard-Kahn conditions, we therefore count the number of eigenvalues
larger than \code{1 + tol}, where \code{tol} is a small  number (by default the square
root of the machine precision). Use argument \code{tol} to change this tolerance
parameter.

Method \code{check} also prints the number of eigenvalues with absolute values
between \code{1 - tol} and \code{1 + tol}.  Thus the values of these eigenvalues are not
significantly different from 1.
}

\section{Warning}{

Method \code{check} is only possible for models with a maximum lag and lead of 1.
If the
original model has lags or leads greater than 1, use argument
\code{max_lag_lead_1 = TRUE} of function \code{dyn_mdl} to create  a transformed model
with maximum lag and lead 1.
}

\examples{
mdl <- islm_mdl()
mdl$check()
print(mdl$get_eigval())
}
\seealso{
\code{\link{solve_steady}} and \code{\link{get_eigval}}
}
